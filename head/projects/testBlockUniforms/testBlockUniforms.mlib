<?xml version="1.0" ?>
<materialLib name="testBlocks">

	
	<shaders>
		<shader name="dirLightDifAmbPix" 
								ps="shaders/dirlightdiffambpix.frag" 
								vs="shaders/dirlightdiffambpix.vert" />
		<shader name="dirLightDifAmbPixNoBlocks" 
								ps="shaders/dirlightdiffambpixNoBlocks.frag" 
								vs="shaders/dirlightdiffambpixNoBlocks.vert" />
	</shaders>
	
	<buffers>
		<buffer name="test">
			<SIZE value=16 />
			<CLEAR value="BY_FRAME" />
			<structure>
				<field value="UINT" />
			</structure>	
		</buffer>
	</buffers>	
		
	<materials>
		<material name="testBlocks">
			<shader name="dirLightDifAmbPix">
				<values>
					<valueof uniform="lightDirection" 	type="LIGHT" context="CURRENT" 
														id=0 component="DIRECTION" /> 
														
					<valueof uniform="lightColor"     	type="LIGHT" context="CURRENT" 
														id=0 component="COLOR" />
														
					<valueof uniform="diffuse" 		  	type="COLOR" context="CURRENT" 
														block="Material" component="DIFFUSE" />
														
					<valueof uniform="specular" 		type="COLOR" context="CURRENT" 
														block="Material" component="SPECULAR" />
														
					<valueof uniform="shininess" 		type="COLOR" context="CURRENT" 
														block="Material" component="SHININESS" />
														
					<valueof uniform="emission" 		type="COLOR" context="CURRENT" 
														block="Material" component="EMISSION" />
														
					<valueof uniform="ambient" 		  	type="COLOR" context="CURRENT" 
														block="Material" component="AMBIENT" />
		
					<valueof uniform="PVM"          	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
														
					<valueof uniform="VM"          		type="RENDERER" context="CURRENT" 
														component="VIEW_MODEL" />
														
					<valueof uniform="V"          		type="RENDERER" context="CURRENT" 
														component="VIEW" />

					<valueof uniform="NormalMatrix"   	type="RENDERER" context="CURRENT" 
														component="NORMAL" />
					
					<valueof uniform="texCount"			type="RENDERER" context="CURRENT" 
														block="Material" component="TEXTURE_COUNT" />
														
					<valueof uniform="texUnit" 			type="MATERIAL_TEXTURE" context="CURRENT" 
														component="UNIT" id="0" />				
				</values>
			</shader>
		</material>		

		<material name="uniforms">
			<shader name="dirLightDifAmbPixNoBlocks">
				<values>
					<valueof uniform="lightDirection" 	type="LIGHT" context="CURRENT" 
														id=0 component="DIRECTION" /> 
														
					<valueof uniform="lightColor"     	type="LIGHT" context="CURRENT" 
														id=0 component="COLOR" />
														
					<valueof uniform="diffuse" 		  	type="COLOR" context="CURRENT" 
														component="DIFFUSE" />
														
					<valueof uniform="specular" 		type="COLOR" context="CURRENT" 
														component="SPECULAR" />
														
					<valueof uniform="shininess" 		type="COLOR" context="CURRENT" 
														component="SHININESS" />
														
					<valueof uniform="emission" 		type="COLOR" context="CURRENT" 
														component="EMISSION" />
														
					<valueof uniform="ambient" 		  	type="COLOR" context="CURRENT" 
														component="AMBIENT" />
		
					<valueof uniform="PVM"          	type="RENDERER" context="CURRENT" 
														component="PROJECTION_VIEW_MODEL" />
														
					<valueof uniform="VM"          		type="RENDERER" context="CURRENT" 
														component="VIEW_MODEL" />
														
					<valueof uniform="V"          		type="RENDERER" context="CURRENT" 
														component="VIEW" />

					<valueof uniform="NormalMatrix"   	type="RENDERER" context="CURRENT" 
														component="NORMAL" />
					
					<valueof uniform="texCount"			type="RENDERER" context="CURRENT" 
														component="TEXTURE_COUNT" />
														
					<valueof uniform="texUnit" 			type="MATERIAL_TEXTURE" context="CURRENT" 
														component="UNIT" id="0" />				
				</values>
			</shader>
		</material>		

	</materials>
</materialLib>
